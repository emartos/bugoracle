# ─────────────────────────────────────────────────────────────────
# Application settings
# ─────────────────────────────────────────────────────────────────

# The current environment (e.g., dev, prod)
ENVIRONMENT=
# The desired log level (DEBUG, INFO, WARNING, ERROR, o CRITICAL
LOG_LEVEL=

# ─────────────────────────────────────────────────────────────────
# Input CSV settings
# ─────────────────────────────────────────────────────────────────

# The CSV path
CSV_DATA_PATH=
# CSV headers
CSV_HEADER_SUBJECT=
CSV_HEADER_CHANGED=
CSV_HEADER_DESCRIPTION=

# ─────────────────────────────────────────────────────────────────
# Output CSV settings (valid only if EXPORT_FORMAT is "csv")
# ─────────────────────────────────────────────────────────────────

# CSV field delimiter (default: ,)
CSV_DELIMITER=
# CSV quote character for values (default: ")
CSV_QUOTECHAR=

# ─────────────────────────────────────────────────────────────────
# Export settings
# ─────────────────────────────────────────────────────────────────

# Whether to export the technological_component
EXPORT_TECHNOLOGICAL_COMPONENT=
# Whether to export the technological_component_subcategory (depends on EXPORT_TECHNOLOGICAL_COMPONENT)
EXPORT_TECHNOLOGICAL_COMPONENT_SUBCATEGORY=
# Whether to export the functional_area
EXPORT_FUNCTIONAL_AREA=
# Whether to export the functional_area_subcategory (depends on EXPORT_FUNCTIONAL_AREA)
EXPORT_FUNCTIONAL_AREA_SUBCATEGORY=
# Whether to export the problem_type
EXPORT_PROBLEM_TYPE=
# Whether to export the problem_type_subcategory (depends on EXPORT_PROBLEM_TYPE)
EXPORT_PROBLEM_TYPE_SUBCATEGORY=
# Export format (valid options: csv, json)
EXPORT_FORMAT=
# Language for export
EXPORT_LANGUAGE=
# Subdirectory for the exportation (do not add any slash)
EXPORT_SUBDIRECTORY=

# ─────────────────────────────────────────────────────────────────
# LLM settings
# ─────────────────────────────────────────────────────────────────

# LLM provider (valid options: openai, grok, ollama, googlegenai)
LLM_PROVIDER=

# ─────────────────────────────────────────────────────────────────
# Settings for the assistant in the processing stage (first).
# These settings are configured only in the .env file.
# ─────────────────────────────────────────────────────────────────

# The role that the assitant will take to tag each bug
ASSISTANT_ROLE_PROCESSING="You are an expert in software development and system \
architecture, with strong knowledge of modern web platforms, distributed systems, and scalable design.\n\
Your task is to classify and categorize a list of incidents reported for an online platform based on the \
provided context and incident data."
# The project context (technologies, bug types, etc.),
# useful for the LLM to understand how the bugs must be categorized
ASSISTANT_CONTEXT_PROCESSING="- **Technologies**:\n \
  - **Backend**: Drupal 6 headless (PHP 8.2) for business logic and REST APIs.\n \
  - **Frontend**: Drupal 10 (PHP 8.2) with React components.\n \
  - **Mobile App**: React Native, consuming APIs from Drupal 6 and Drupal 10.\n \
- **Third-Party Integrations**:\n \
  - **Algolia**: Search and product listings.\n \
  - **SPLIO**: Email marketing.\n \
- **Architecture**:\n \
  - Interconnected projects communicating asynchronously via REST APIs.\n \
  - Drupal-integrated queue system for asynchronous processing.\n \
- **Infrastructure**: Hosted and managed by AWS.\n \
- **Key Functionalities**: Product catalog, search, shopping cart, checkout, \
order management, logistics, email marketing, mobile experience, marketing feeds, and translations."
# Additional instructions for the model
ASSISTANT_ADDITIONAL_INSTRUCTIONS_PROCESSING=
# Explain the technological components of your project, including a list of suitable options
DIMENSION_TECHNOLOGICAL_COMPONENT="Drupal 6 (D6/admin), Drupal 10 (BB/Bodeboca), React, React Native, Algolia, SPLIO, \
Logistics APIs, OVH Infrastructure, Valentina (Val), Nodefactory (NF), Marketplace (MP), Logistics (Mercury)"
# Explain the functional areas of your project, including a list of suitable options
DIMENSION_FUNCTIONAL_AREA="Search, Product Catalog, Shopping Cart, Checkout, Order Management, Logistics, \
Email Marketing, Mobile Experience, Marketing Feeds (e.g., Google Shopping, Criteo), Translations, \
Private Sales (Ventas Privadas, VP), Collections, Pricing, Banners, Order Synchronization"
# Explain the expected problem types of your project, including a list of suitable options
DIMENSION_PROBLEM_TYPE="Functional Error, Performance Issue, Integration Failure, UX Issue, Security Issue, \
Configuration Error, Infrastructure Failure, or Data Synchronization Issue"

# ─────────────────────────────────────────────────────────────────
# Settings for the assistant in the insights stage (last).
# These settings are configured only in the .env file.
# ─────────────────────────────────────────────────────────────────

# The role that the assitant will take to generate the insights
ASSISTANT_ROLE_INSIGHTS="You are an expert in software development and system architecture, with broad knowledge \
of modern web technologies, mobile development, and distributed systems.\n\
Your task is to analyze a dataset of summarized incidents to produce a global overview. Focus on identifying \
key trends, recurring issues, and areas of improvement that could impact the platform."
# The project context (technologies, bug types, etc.),
# useful for the LLM to understand what is the goal of the analysis
ASSISTANT_CONTEXT_INSIGHTS="- **Technological Components**: Includes backend systems for business logic and APIs, \
modern frontend technologies, and mobile applications integrated via APIs.\n \
- **Functional Areas**: Key areas include product catalog, checkout processes, multilingual support, marketing feeds, \
logistics, and email marketing.\n \
- **Integrity and Issues**: The platform relies on API integrations (e.g., for search and marketing) \
and asynchronous processing through queuing systems."
# Additional instructions for the model
ASSISTANT_ADDITIONAL_INSTRUCTIONS_INSIGHTS=

# ─────────────────────────────────────────────────────────────────
# OpenAI settings
# ─────────────────────────────────────────────────────────────────

# Your OpenAI API key
OPENAI_API_KEY=
# The role used by OpenAI's Language Models (e.g. assistant)
OPENAI_TEXT_ROLE=
# The specific model to be used (e.g. gpt-3.5-turbo)
OPENAI_TEXT_MODEL=

# ─────────────────────────────────────────────────────────────────
# x.ai (XAI) settings
# ─────────────────────────────────────────────────────────────────

# Your x.ai API key
XAI_API_KEY=
# The base URL for x.ai (e.g. https://api.x.ai/v1)
XAI_BASE_URL=
# The role used by x.ai (e.g. assistant)
XAI_TEXT_ROLE=
# The specific model to be used by x.ai (e.g. grok-beta)
XAI_TEXT_MODEL=

# ─────────────────────────────────────────────────────────────────
# Google AI Studio Settings
# ─────────────────────────────────────────────────────────────────

# Your Google AI Studio API key
GOOGLE_API_KEY=
# The role used by Google AI Studio (e.g. user)
GOOGLE_TEXT_ROLE=
# The specific model to be used by Google AI Studio (e.g. gemini-1.5-flash)
GOOGLE_TEXT_MODEL=

# ─────────────────────────────────────────────────────────────────
# Ollama Settings
# ─────────────────────────────────────────────────────────────────

# The base URL for Ollama (e.g. http://localhost:11434)
OLLAMA_BASE_URL=
# The specific model to be used by Ollama (e.g. llama3.2)
OLLAMA_TEXT_MODEL=

# ─────────────────────────────────────────────────────────────────
# Redis settings
# ─────────────────────────────────────────────────────────────────

# Hostname or IP for the Redis instance
REDIS_HOST=
# Redis service port mapping (usually, 6379)
REDIS_PORT=
# Redis database index
REDIS_DB=
# Cache Time-To-Live in seconds (e.g. 604800)
CACHE_TTL=
